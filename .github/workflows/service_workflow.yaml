name: Service Workflow

on:
  push:
    branches:
      - main
    paths:
      - src/**

jobs:
  install_deps:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup poetry
        run: pip install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9.10"
          cache: poetry

      - name: Install deps
        run: |
          poetry install

  api_test:
    runs-on: ubuntu-20.04
    needs: install_deps
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup poetry
        run: pip install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9.10"
          cache: poetry

      - name: Setup git config
        run: |
          git config --global user.email "nikola.vilar@student.um.si"
          git config --global user.name "Nikola Vilar"

      - uses: iterative/setup-dvc@v1
      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DAGSHUB_ACCESS_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DAGSHUB_SECRET_ACCESS_KEY}}

      - name: Pull changes
        run: |
          git pull
          dvc pull -r origin

      - name: Run pytest
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
          poetry add mlflow==2.11.3 boto3==1.34.51 importlib-metadata==7.0.2 packaging==23.2 pandas==2.0.3 pydot==2.0.0 scipy==1.10.1
          poetry run pytest tests/test_service.py

  deploy_server:
    needs: api_test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup poetry
        run: pip install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9.10"
          cache: poetry

      - uses: iterative/setup-dvc@v1
      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DAGSHUB_ACCESS_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DAGSHUB_SECRET_ACCESS_KEY}}

      - name: Setup git config
        run: |
          git config --global user.email "nikola.vilar@student.um.si"
          git config --global user.name "Nikola Vilar"

      - name: Pull changes
        run: |
          git pull
          dvc pull -r origin

      - name: Export poetry deps to requirements.txt
        run: poetry export -f requirements.txt --without-hashes > requirements.txt

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/iis-server:latest

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: nikolavilar/iis-server

      - name: Deploy to Northflank
        uses: northflank/deploy-to-northflank@v1
        with:
          northflank-api-key: ${{ secrets.NORTHFLANK_API_KEY }}
          project-id: iis
          service-id: server
          credentials-id: iis-registry
          image-path: nikolavilar/iis-server

  deploy_client:
    needs: api_test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: src/client
          file: src/client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/iis-client:latest

[tool.poetry]
name = "iis"
version = "0.1.0"
description = ""
authors = ["Nikola Vilar <nikola.vilar@student.um.si>"]
readme = "README.md"
packages = [
    { include = "src" }
]

[tool.poetry.dependencies]
python = "3.9.10"
tensorflow-io-gcs-filesystem = "0.31.0"
tensorflow = "2.15.0"
tensorflow-intel = {version="^2.15.0", platform = "win32"}
scikit-learn = "1.2.2"
flask = "^3.0.2"
requests = "^2.31.0"
pandas = "2.0.3"
matplotlib = "^3.4.3"
numpy = "^1.22,<1.24"
flask-cors = "^4.0.0"
great-expectations = "^0.18.12"
evidently = "^0.4.19"
mlflow = "2.11.3"
pymongo = "^4.6.3"
pytest-rerunfailures = "^14.0"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.3"
black = "^24.3.0"
jupyter = "^1.0.0"
pytest = "^8.1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
fetch-data = "src.data.fetch_data:main"
preprocess-data = "src.data.preprocess_data:main"
validate-data = "src.data.validate_data:main"
stability-data = "src.data.stability_data:main"
update-data = "src.data.reference_update:main"
split-data = "src.data.split_data:main"
train-model = "src.models.train_model:main"
evaluate-model = "src.models.evaluate_model:main"
evaluate-results = "src.models.evaluate_results:main"
server = "src.serve.server:main"